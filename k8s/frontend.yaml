apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      initContainers:
        # Wait for backend to be ready
        - name: wait-for-backend
          image: busybox:1.35
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c']
          args:
            - |
              echo "Waiting for backend to be ready..."
              until nc -z backend-external 8000; do
                echo "Backend is not ready yet. Waiting 5 seconds..."
                sleep 5
              done
              echo "Backend is ready!"
              
              # Also check if the backend health endpoint is responsive
              echo "Checking backend health endpoint..."
              until wget -q --spider http://backend-external:8000/health 2>/dev/null; do
                echo "Backend health endpoint is not ready yet. Waiting 3 seconds..."
                sleep 3
              done
              echo "Backend health endpoint is ready!"
      containers:
        - name: frontend
          image: frontend:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - port: 3000
      targetPort: 80
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
  labels:
    app: frontend
    type: nginx-config
data:
  nginx.conf: |
    server {
        listen 80;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html;

        location / {
            try_files $uri /index.html;
        }
    }
